{
    "collab_server" : "",
    "contents" : "##########################################################################################################################\n##################################        Set-up       ################################################################### \n##########################################################################################################################\nlibrary(sp)\nlibrary(rgdal)\nlibrary(gpclib)\nlibrary(ggmap)\nlibrary(ggplot2)\n#library(spatstat)\n#library(PBSmapping)\nlibrary(maptools)\nlibrary(Cairo)\nlibrary(scales)\nlibrary(spatstat)\nlibrary(raster)    \n# give maptools the permission to use gpclib\ngpclibPermit()\n\nsetwd(\"/Users/EILEENWEI/Team5\")\nblock_seattle_datafile <- file.path(\"/Users/EILEENWEI/Team5/DataObjects\",\"block_seattle.rds\")\n\n\n\n\n##########################################################################################################################\n##################################        Crime Data       ############################################################### \n##########################################################################################################################\n\ndata <- read.csv('Seattle_Police_Department_Police_Report_Incident.csv')\n## Eliminate data that does not contain coordinates\ndata <- data[!is.na(data$Longitude)&!is.na(data$Latitude),]\ncrimeData <- subset(data, Summarized.Offense.Description != \"[INC - CASE DC USE ONLY]\" & Summarized.Offense.Description != \n                      \"ANIMAL COMPLAINT\" & Summarized.Offense.Description != \"BIAS INCIDENT\" & Summarized.Offense.Description != \"COUNTERFEIT\"\n                    & Summarized.Offense.Description != \"DUI\" & Summarized.Offense.Description != \"ELUDING\"\n                    & Summarized.Offense.Description != \"EMBEZZLE\" & Summarized.Offense.Description != \"ESCAPE\"\n                    & Summarized.Offense.Description != \"FALSE REPORT\" & Summarized.Offense.Description != \"FIREWORK\"\n                    & Summarized.Offense.Description != \"GAMBLE\" & Summarized.Offense.Description != \"HARBOR CALLS\"\n                    & Summarized.Offense.Description != \"ILLEGAL DUMPING\" & Summarized.Offense.Description != \"INJURY\"\n                    & Summarized.Offense.Description != \"LOST PROPERTY\" & Summarized.Offense.Description != \"METRO\"\n                    & Summarized.Offense.Description != \"OBSTRUCT\" & Summarized.Offense.Description != \"OTHER PROPERTY\"\n                    & Summarized.Offense.Description != \"PORNOGRAPHY\" & Summarized.Offense.Description != \"PROSTITUTION\"\n                    & Summarized.Offense.Description != \"RECOVERED PROPERTY\" & Summarized.Offense.Description != \"STAY OUT OF AREA OF PROSTITUTION\"\n                    & Summarized.Offense.Description != \"TRAFFIC\" )\n\n## Get the more precise coordinates using Location\nlibrary(splitstackshape)\ncrimeData$Location1 <- as.character.factor(crimeData$Location)\ncrimeData <- cSplit(crimeData, \"Location1\", \",\", drop = FALSE)\n\noptions(digits=12)\ncrimeData$Location1_1  <- as.numeric(gsub(\"\\\\(|\\\\)\", \"\", crimeData$Location1_1))\ncrimeData$Location1_2  <- as.numeric(gsub(\"\\\\(|\\\\)\", \"\", crimeData$Location1_2))\n\n\ncoordinates(crimeData)=~Location1_2+Location1_1\n\n\n\n\n##########################################################################################################################\n##################################        Block Data       ############################################################### \n##########################################################################################################################\n\n# Read in the shapefile that describes the census tract boundaries.\n# block <- readOGR(dsn = \"WABlockData\", layer = \"tl_2012_53_tabblock\")\nblock <- shapefile(\"WABlockData/tl_2012_53_tabblock.shp\")\n\n# Clear data\nblock <- block[!is.na(block$INTPTLAT)&!is.na(block$INTPTLON),] \n\n# Get blocks that are within Seattle\nblock_seattle <- subset(block, ((as.numeric(as.character(block$INTPTLAT)) < 47.734145 & as.numeric(as.character(block$INTPTLAT)) > 47.48172) & (as.numeric(as.character(block$INTPTLON)) < -122.224433 & as.numeric(as.character(block$INTPTLON)) > -122.459696)))\n\n# block_seattle$GEOID <- as.character.factor(block_seattle$GEOID)\n\n\n### Overlaying with crime data\nprojection(crimeData)=projection(block_seattle)\ncrime_block <- over(crimeData,block_seattle)\n\ncrimeData@data <- data.frame(crimeData@data, crime_block)\n\ncrimeData@data$count <- 1\n# Aggregate the crime data\nagg_crime_block <- aggregate(formula=count~GEOID, data=crimeData@data, FUN=length)\n# agg_crime_block$GEOID <- as.character.factor(agg_crime_block$GEOID)\n\nm <- match(x= block_seattle$GEOID, table=agg_crime_block$GEOID)\nblock_seattle@data$count <- agg_crime_block$count[m]\n\nblock_seattle@data$count[is.na(block_seattle@data$count)] <- 0\n\n\n#grab a palette\nlibrary(RColorBrewer)\n\npal <- brewer.pal(11, \"Spectral\")\n\n\n\n\n#now make it more continuous \n#as a colorRamp\npal <- colorRampPalette(pal)\n\n# now, map it to  values\nlibrary(classInt)\npalData <- classIntervals(block_seattle@data$count, style=\"quantile\")\n\n#note, we use pal(100) for a smooth palette here\n#but you can play with this\nblock_seattle@data$colors <- findColours(palData, pal(100))\n\ncolfunc <- colorRampPalette(c(\"green\",\"red\"))\ncolor_list <- colfunc(633)\nblock_seattle@data$colors <- color_list[block_seattle@data$count]\n\n\nsaveRDS(block_seattle, file = block_seattle_datafile)\n\n",
    "created" : 1461203849014.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1151219516",
    "id" : "C24C51B2",
    "lastKnownWriteTime" : 1462274975,
    "last_content_update" : 1462274975,
    "path" : "~/Team5/data_processor.R",
    "project_path" : "data_processor.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}